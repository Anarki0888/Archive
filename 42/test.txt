

    // COLLE00.C //


void	ft_putchar(char c);     // appel a la fonction //

void	ft_sec(char a, char b, int y);  // appel a la fonction //

void	colle(int x, int y)  // FONCTION DE POSITIONNEMENT //
{
	int i;

	i = 0;
	if (x > 0 && y > 0) // CONDITION D'ARRET //
	{
		ft_sec('o', '-', x);  // ECRITURE DE LA 1ERE LIGNE //
		if (y > 2)
		{
			while (i < (y - 2))
			{
				ft_sec('|', ' ', x); // ECRITURE DES LIGNES DU MILIEU//
				i++;
			}
		}
		if (y > 1)
		{
			ft_sec('o', '-', x);  // ECRITURE DE LA DERNIERE LIGNE //
		}
	}
}

void	ft_sec(char a, char b, int y)  // FONCTION D'ECRITURE //
{
	int i;

	i = 0;
	ft_putchar(a);  // ECRITURE DU 1ER CARACTERE  PASSE EN PARAMETRE 	//
	while (i < (y - 2))
	{
		ft_putchar(b);  //  ECRITURE DU 2E CARACTERE PASSE EN PARAMETRE  //
		i++;
	}
	if (y > 1)
	{
		ft_putchar(a); // ECRITURE DU DERNIER CARACTERE o  AVEC UN RETOUR A LA LIGNE //
	}
	ft_putchar('\n');
}


  // MAIN.C //


#include <unistd.h>

void	ft_putchar(char c);  // APPEL A LA FONCTION FT_PUTCHAR //

int		ft_atoi(char *str)  // FONCTION POUR PRENDRE LA CHAINE DE CARACTERE ET LA CHANGER EN INT  === UN NOMBRE //
{
	int result;
	int len;
	int negative;

	result = 0;
	len = 0;
	negative = 0;
	if (*str == '\0')
		return (0);
	while (str[len] == ' ' || str[len] == '\r' || str[len] == '\f'     // CARACTERE SPECIAUX QU'IL PEUT SAUTER //
		|| str[len] == '\n' || str[len] == '\t' || str[len] == '\v')
		len++;
	if (str[len] == '-')   // SI LE STR[LEN] = A UN - ON PASSE NEGATIVE A 1 POUR FAIRE UN *-1 A LA FIN //
		negative = 1;
	if (str[len] == '-' || str[len] == '+')
		len++;
	while ((str[len] >= '0') && (str[len] <= '9') && (str[len] != '\0')) // TANT QUE LE CARACTERE ET COMPRIS ENTRE '0' ET '9' ON CONTINU DE LE STOCKER //  
	{
		result = result * 10 + (str[len] - '0');  // AJOUTE LES NOMBRES A LA CHAINE DE CARACTERE //
		len++;
	}
	if (negative == 1)   // SI ILY AVAIT UN - DEVANT LE NOMBRE, TRANSFORME LE RESULTAT EN -RESULTAT //
		result = result * -1;
	return (result);
}

void	colle(int x, int y);  // RAPPEL DE FONCTION //

int		main(int argc, char **argv)   // ARGC == DIRE QU'ILY A DES ARGUMENTS ARGV == LES ARGUMENTS //
{
	if (argc > 1)
	{
		if (argc == 3) 
			colle(ft_atoi(argv[1]), ft_atoi(argv[2]));  // ./A.OUT EST L'ARGV[0]  ARGV[1] ==  (* , )  ARGV[2] == ( , *)
		else
			write(1, "This program need two arguments.\n", 33); // SI LE NOMBRE D'ARGUMENT EST SUPERIEUR A 2 RENVOI UN MESSAGE D'ERREUR //
	}
	else
		colle(5, 2); // SI PAS D'ARGUMENT APRES LE ./A.OUT LE PROGRAMME DEMMARRE AVEC CA // 
	return (0);
}
